# The DataAnalyzer class handles data loading and statistical calculations.
class DataAnalyzer
  def initialize(data_array)
    @data = data_array.map(&:to_f) # Ensure all data is numeric
  end

  # Calculates the mean (average) of the dataset.
  def mean
    return 0.0 if @data.empty?
    @data.sum / @data.size.to_f
  end

  # Calculates the median of the dataset.
  def median
    return 0.0 if @data.empty?
    sorted_data = @data.sort
    mid = sorted_data.size / 2
    if sorted_data.size.odd?
      sorted_data[mid]
    else
      (sorted_data[mid - 1] + sorted_data[mid]) / 2.0
    end
  end

  # Calculates the mode (most frequent value) of the dataset.
  def mode
    return nil if @data.empty?
    counts = Hash.new(0)
    @data.each { |value| counts[value] += 1 }
    counts.max_by { |_, count| count }.first
  end

  def to_s
    "Dataset: #{@data.join(', ')}"
  end
end

# Main script logic
dataset = [2.5, 4.1, 3.2, 5.5, 2.5, 6.0, 4.1, 4.1]
analyzer = DataAnalyzer.new(dataset)

puts analyzer
puts "Mean:   #{analyzer.mean}"
puts "Median: #{analyzer.median}"
puts "Mode:   #{analyzer.mode}"
